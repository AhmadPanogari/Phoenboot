################################################################################
# Phoenboot Makefile - Originally generated by Atmel Studio
################################################################################

SHELL := cmd.exe
RM := rm -rf

# Use Arduino AVR Toolchain by default
# Using the Atmel toolchain does not optimize as much
# Override by passing AVR_PATH=[path] through Make.
ifndef AVR_PATH
  AVR_PATH := C:/Program Files (x86)/Arduino/hardware/tools/avr/bin
endif

USER_OBJS :=

LIBS := 
PROJ := 

O_SRCS := 
C_SRCS := 
S_SRCS := 
S_UPPER_SRCS := 
OBJ_SRCS := 
ASM_SRCS := 
PREPROCESSING_SRCS := 
OBJS := 
OBJS_AS_ARGS := 
C_DEPS := 
C_DEPS_AS_ARGS := 
EXECUTABLES := 
OUTPUT_FILE_PATH :=
OUTPUT_FILE_PATH_AS_ARGS :=
AVR_APP_PATH :=$$$AVR_APP_PATH$$$
QUOTE := "
ADDITIONAL_DEPENDENCIES:=
OUTPUT_FILE_DEP:=
LIB_DEP:=

# Every subdirectory with source files must be described here
SUBDIRS := 

# Add inputs and outputs from these tool invocations to the build variables 
C_SRCS +=  \
../display.cpp \
../PHNSDMinimal.cpp \
../PHNSettings.cpp \
../phoenboot.cpp

PREPROCESSING_SRCS += 

ASM_SRCS += 

OBJS +=  \
display.o \
PHNSDMinimal.o \
PHNSettings.o \
phoenboot.o

OBJS_AS_ARGS +=  \
display.o \
PHNSDMinimal.o \
PHNSettings.o \
phoenboot.o

C_DEPS +=  \
display.d \
PHNSDMinimal.d \
PHNSettings.d \
phoenboot.d

C_DEPS_AS_ARGS +=  \
display.d \
PHNSDMinimal.d \
PHNSettings.d \
phoenboot.d

OUTPUT_FILE_PATH +=phoenboot.elf

OUTPUT_FILE_PATH_AS_ARGS +=phoenboot.elf

ADDITIONAL_DEPENDENCIES:=

OUTPUT_FILE_DEP:= ./makedep.mk

LIB_DEP+= 

# AVR32/GNU C Compiler

./%.o: .././%.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 4.8.1
	$(QUOTE)$(AVR_PATH)\avr-g++.exe$(QUOTE) -g -mno-interrupts -funsigned-char -funsigned-bitfields -DDEBUG -DF_CPU=16000000UL  -Os -ffunction-sections -fdata-sections -fpack-struct -fshort-enums -mrelax -Wall -mmcu=atmega2560 -c -fno-jump-tables -finline-limit=9999 -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<

# AVR32/GNU Preprocessing Assembler



# AVR32/GNU Assembler

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

# Add inputs and outputs from these tool invocations to the build variables 

# All Target
all: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)

$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP) $(LIB_DEP)
	@echo Building target: $@
	$(QUOTE)$(AVR_PATH)\avr-g++.exe$(QUOTE) -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS) -nostartfiles -Wl,-Map="phoenboot.map" -Wl,--start-group -Wl,-lm  -Wl,--end-group -Wl,--gc-sections -mrelax -mmcu=atmega2560 -Wl,--section-start=.text=3E000  
	@echo Finished building target: $@
	"$(AVR_PATH)\avr-objcopy.exe" -O ihex -R .eeprom -R .fuse -R .lock -R .signature -R .user_signatures "phoenboot.elf" "phoenboot.hex"
	"$(AVR_PATH)\avr-objdump.exe" -d "phoenboot.elf" > "phoenboot.lss"
	"$(AVR_PATH)\avr-objdump.exe" -S "phoenboot.elf" > "phoenboot_s.lss"
	"$(AVR_PATH)\avr-size.exe" "phoenboot.elf"

# Other Targets
clean:
	-$(RM) $(OBJS_AS_ARGS) $(EXECUTABLES)  
	-$(RM) $(C_DEPS_AS_ARGS)   
	rm -rf "phoenboot.elf" "phoenboot.a" "phoenboot.hex" "phoenboot.lss" "phoenboot_s.lss" "phoenboot.map" "phoenboot.srec" "phoenboot.usersignatures"
	